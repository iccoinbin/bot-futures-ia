import pandas as pd
from src.strategies.trend_v31 import run_trend
from src.strategies.meanrev_v31 import run_meanrev
from src.backtest.risk_kernel_v31 import RiskKernel, RiskState

def run_backtest_orchestrated(df: pd.DataFrame, cfg: dict):
    adx_min = cfg["filters"]["adx_trend_min"]
    ql = cfg["filters"]["atrq_low"]; qh = cfg["filters"]["atrq_high"]
    low = df["atr_pct"].quantile(ql); high = df["atr_pct"].quantile(qh)
    df = df[(df["atr_pct"]>=low) & (df["atr_pct"]<=high)].copy()
    df["date"] = df["close_time"].dt.date

    equity_start = cfg["risk"]["capital_usdt"]
    equity = equity_start; max_equity = equity_start
    risk = RiskKernel(cfg)
    trades_all=[]; pnl_total=0.0; consec_losses=0
    day_pl=0.0; week_pl=0.0; last_week=None

    for d, group in df.groupby("date"):
        week = pd.Timestamp(d).week
        if last_week is None: last_week = week
        if week != last_week:
            week_pl = 0.0; last_week = week
        day_pl = 0.0

        adx_med = group["adx"].median()
        strat = "trend" if adx_med >= adx_min else "mr"

        state = RiskState(equity_start, equity, day_pl, week_pl, consec_losses, max_equity)
        if not risk.allow_new_trade(state):
            continue

        if strat=="trend":
            pnl, trades = run_trend(group, cfg)
        else:
            pnl, trades = run_meanrev(group, cfg)

        pnl_total += pnl; day_pl += pnl; week_pl += pnl; equity += pnl
        if equity > max_equity: max_equity = equity
        if trades:
            consec_losses = 0 if sum(1 for t in trades if t<0)==0 else (consec_losses+1 if sum(trades)<0 else 0)
        trades_all.extend(trades)

    res = {
        "pnl_total": pnl_total,
        "num_trades": len(trades_all),
        "wins": len([t for t in trades_all if t>0]),
        "losses": len([t for t in trades_all if t<=0]),
        "avg_trade": (sum(trades_all)/len(trades_all)) if trades_all else 0.0
    }
    return res
